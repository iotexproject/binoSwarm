name: Docker Image CI

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]
    release:
        types: [published]

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        permissions:
            packages: write # Required to push images to ghcr.io
            contents: read

        steps:
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/${{ github.repository_owner }}/bino
                  tags: |
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}
                      type=raw,value=latest,enable=${{ github.event_name == 'release' && github.event.release.prerelease == false }}
                      type=sha,prefix=sha-
                      type=sha,format=short
                      type=ref,event=branch
                      type=ref,event=pr

            - name: Login to GitHub Container Registry
              if: github.event_name == 'push' || github.event_name == 'release'
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and Push Docker Image
              uses: docker/build-push-action@v6
              with:
                  push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'release' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: |
                      type=gha,scope=${{ github.ref_name == 'main' && 'main' || '' }}
                      type=registry,ref=ghcr.io/${{ github.repository_owner }}/bino:latest
                  cache-to: ${{ github.ref_name == 'main' && 'type=gha,mode=max' || '' }}
